- hosts: localhost

  vars:
    glassfish_uid: 4204
    glassfish_user: glassfish
    glassfish_group: glassfish

    glassfish_root: /glassfish4
    glassfish_home: "{{ glassfish_root }}/glassfish"
    glassfish_asadmin: "{{ glassfish_home }}/bin/asadmin"

    asadmin_password: adminadmin
    asadmin_password_file: "{{Â glassfish_home }}/bin/PASSWORD_FILE"

    backend_demoapp_db_user: demo-back
    backend_demoapp_db_pass: demo-back
    backend_demoapp_db_name: demo_back

    mysql_host: mysql-srv
    mysql_port: 3306

    download_directory: /tmp/dl

  tasks:
    - name: Install yum packages
      yum: name={{ item }} state=present
      with_items:
        - unzip
        - expect

    - name: Create download directory in temp file
      file: path={{ download_directory }} state=directory

    - name: Download glassfish
      command: wget -O {{ download_directory }}/glassfish-4.1.zip http://dlc.sun.com.edgesuite.net/glassfish/4.1/release/glassfish-4.1.zip

    - name: Dowload mysql connector
      command: wget -O {{ download_directory }}/mysql-connector-java-5.1.34.zip http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.34.zip

    - name: Unzip mysql connector
      unarchive: src={{ download_directory }}/mysql-connector-java-5.1.34.zip dest={{ download_directory }}

    - name: Add glassfish group
      group: name={{ glassfish_group }} state=present

    - name: Create glassfish user
      user: name={{ glassfish_user }} group={{ glassfish_group }} uid={{ glassfish_uid }} state=present

    - name: Install glassfish
      unarchive: src={{ download_directory }}/glassfish-4.1.zip dest=/ copy=yes group={{ glassfish_group }} owner={{ glassfish_user }} creates=/glassfish4

    - name: Install mysql connector
      copy: src={{ download_directory }}/mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar dest={{ glassfish_home }}/lib group={{ glassfish_group }} owner={{ glassfish_user }}

    - name: Clean the download directory
      file: path={{ download_directory }} state=absent

    - name: Copy the the password file for glassfish
      template: src=templates/PASSWORD_FILE.j2 dest={{ asadmin_password_file }} group={{ glassfish_group }} owner={{ glassfish_user }}

    - name: Apply the rights to glassfish
      file: path={{ glassfish_root }} recurse=yes owner={{ glassfish_user }} group={{ glassfish_group }} state=directory

    - name: Start glassfish
      command: /bin/su {{ glassfish_user }} -c "{{ glassfish_asadmin }} start-domain domain1"

    - name: Copy the change password script
      template: src=templates/changePassword.sh.j2 dest={{ glassfish_root }}/changePassword.sh mode=755 owner={{ glassfish_user }} group={{ glassfish_group }}

    - name: Change admin password
      command: /bin/su {{ glassfish_user }} -c "{{ glassfish_root }}/changePassword.sh"

    - name: Enable admin console from remote host
      command: /bin/su {{ glassfish_user }} -c "{{ glassfish_asadmin }} --user admin --passwordfile {{ asadmin_password_file }} --host localhost --port 4848 enable-secure-admin"

    - name: Add connection pool
      command: /bin/su {{ glassfish_user }} -c "{{ glassfish_asadmin }} --user admin --passwordfile {{ asadmin_password_file }} --host localhost --port 4848 create-jdbc-connection-pool --datasourceclassname com.mysql.jdbc.jdbc2.optional.MysqlXADataSource --steadypoolsize 5 --maxpoolsize 50 --maxwait 60000 --idletimeout 300 --isconnectvalidatereq=true --validationmethod meta-data --restype javax.sql.XADataSource --property DatabaseName={{ backend_demoapp_db_name }}:ServerName={{ mysql_host }}:port={{ mysql_port }}:password={{ backend_demoapp_db_pass }}:user={{ backend_demoapp_db_user }} demo-back-pool"

    - name: Add JDBC resource
      command: /bin/su {{ glassfish_user }} -c "{{ glassfish_asadmin }} --user admin --passwordfile {{ asadmin_password_file }} --host localhost --port 4848 create-jdbc-resource --enabled=true --connectionpoolid demo-back-pool jdbc/demo-back"
